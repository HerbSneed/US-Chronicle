var apiKey2 = "c8b7b4b0c8b04b6e9b7b4b0c8b04b6e9";
var apiKey = "0aa43dd5018e4447ac45d86caf10d084";
var apiKey3 = "2Ht15kLezw6bEbdpkU3Hbvf8g4XSlFtJ9fpOezFY";

// export const getSearchedHeadlines = async (searchQuery) => {
//   return fetch(`https://newsapi.org/v2/everything?q=${searchQuery}&language=en&pageSize=100&apiKey=${apiKey}`);
// }

// export const getUserHeadlines = async (userCategory) => {
//   return fetch(`https://newsapi.org/v2/top-headlines?country=US&category=${userCategory}&pageSize=100&apiKey=${apiKey}`);
// };

// export const getUsHeadlines = async () => {
//   return fetch(`https://newsapi.org/v2/top-headlines?country=US&category=general&pageSize=100&apiKey=${apiKey}`);
// }

export const getBusinessHeadlines = async () => {
  return fetch(`https://newsapi.org/v2/top-headlines?country=US&category=business&pageSize=100&apiKey=${apiKey3}`);
};

export const getSportsHeadlines = async () => {
  return fetch(`https://newsapi.org/v2/top-headlines?country=US&category=sports&pageSize=100&apiKey=${apiKey}`);
};

export const getHealthHeadlines = async () => {
  return fetch(`https://newsapi.org/v2/top-headlines?country=US&category=health&pageSize=100&apiKey=${apiKey}`);
};

export const getEntertainmentHeadlines = async () => {
  return fetch(`https://newsapi.org/v2/top-headlines?country=US&category=entertainment&pageSize=100&apiKey=${apiKey}`);
};

export const getTechnologyHeadlines = async () => {
  return fetch(`https://newsapi.org/v2/top-headlines?country=US&category=technology&pageSize=100&apiKey=${apiKey}`);
};

export const getScienceHeadlines = async () => {
  return fetch(`https://newsapi.org/v2/top-headlines?country=US&category=science&pageSize=100&apiKey=${apiKey}`);
};

// export const getUsHeadlines = async () => {
//   return fetch(`https://newsapi.org/v2/top-headlines?country=US&category=general&pageSize=100&apiKey=${apiKey}`);
// }

var apiKey2 = "c8b7b4b0c8b04b6e9b7b4b0c8b04b6e9";
var apiKey = "0aa43dd5018e4447ac45d86caf10d084";

export const getSearchedHeadlines = async (searchQuery) => {
  return fetch(`https://newsapi.org/v2/everything?q=${searchQuery}&language=en&pageSize=100&apiKey=${apiKey}`);
}

export const getUserHeadlines = async (userCategory) => {
  return fetch(`https://newsapi.org/v2/top-headlines?country=US&category=${userCategory}&pageSize=100&apiKey=${apiKey}`);
};

export const getUsHeadlines = async () => {
  return fetch(`https://newsapi.org/v2/top-headlines?country=US&category=general&pageSize=100&apiKey=${apiKey}`);
}

export const getCategoryHeadlines = async (category) => {
  return fetch(`https://newsapi.org/v2/top-headlines?country=US&category=${category}&pageSize=100&apiKey=${apiKey}`);
};

if (userData.userDefaultNews === "Top News") {
          response = await axios.get("/api/usheadlines");
        } else if (searchQuery) {
          console.log(searchQuery);
          setSelectedCategory(searchQuery);
          response = await axios.get(`/api/search?query=${searchQuery}`);

        } else if (selectedCategory) {
          setSelectedCategory([selectedCategory]);
          response = await axios.get(
            `/api/categoryheadlines?category=${selectedCategory}`
          );
        } else {
          const userCategory = userData.userDefaultNews.trim();
          setSelectedCategory([userCategory]);
          response = await axios.get(
            `/api/userheadlines?category=${userCategory}`
          );
        }





import Search from "../src/pages/search";
import "./App.css";
import {
  ApolloClient,
  InMemoryCache,
  ApolloProvider,
  createHttpLink,
} from "@apollo/client";
import { setContext } from "@apollo/client/link/context";
import { useCookies } from "react-cookie";
import Header from "./components/Header";
import Sidebar from "./components/Sidebar";
import { Outlet } from "react-router-dom";
import { useState, useEffect } from "react";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";

function App({ children }) {
  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  const [cookies] = useCookies(["auth_token"]);

  const httpLink = createHttpLink({
    uri: "/graphql",
  });

  const authLink = setContext((_, { headers }) => ({
    headers: {
      ...headers,
      authorization: cookies?.auth_token ? `Bearer ${cookies.auth_token}` : "",
    },
  }));

  const client = new ApolloClient({
    link: authLink.concat(httpLink),
    cache: new InMemoryCache(),
  });

    useEffect(() => {
      const handleDocumentClick = (event) => {
        const header = document.querySelector("nav");
        if (!header.contains(event.target) && setIsSidebarOpen) {
          // Click occurred outside the header, close sidebar if open
          setIsSidebarOpen(false);
        }
      };

      document.addEventListener("click", handleDocumentClick);

      return () => {
        document.removeEventListener("click", handleDocumentClick);
      };
    }, [setIsSidebarOpen]);
  
  return (
    <ApolloProvider client={client}>
      <Header isOpen={isSidebarOpen} setIsSidebarOpen={setIsSidebarOpen}/>
      <Sidebar isOpen={isSidebarOpen} setIsSidebarOpen={setIsSidebarOpen}/>
      <main>
        <Outlet>
          <Search/>
        </Outlet>
        {children}
      </main>
    </ApolloProvider>
  );
}

export default App;


useEffect(() => {
    const fetchNewsFromSidebar = async () => {
      try {
        let response;

        response = await axios.get(`api/search?searchQuery=${searchQuery}`);
        console.log(searchQuery);

        if (response.status === 200) {
          const headlines = response.data;

          const newsData = headlines.articles
            .filter((news) => {
              return (
                news.urlToImage !== null &&
                news.title !== "[Removed]" &&
                news.status !== "410" &&
                news.status !== "404"
              );
            })
            .map((news) => ({
              newsId: news.publishedAt + news.title,
              title: news.title,
              image: news.urlToImage,
              url: news.url,
              summary: news.description || "Summary not available.",
              source_country: news.source.name,
              latest_publish_date: formatDateTime(news.publishedAt),
            }));

          setNewsItems(newsData);
          setSelectedCategory(searchQuery);
        } else {
          console.error("Invalid response:", response);
        }
      } catch (err) {
        console.error("Error in fetchNewsFromSidebar:", err);
      }
    };
    fetchNewsFromSidebar();
  }, [searchQuery]);